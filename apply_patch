#!/usr/bin/env python3
"""
apply_patch: Apply a custom patch format to the working directory.

Supported operations:
- Add File: creates a new file with the given lines (lines prefixed with '+')
- Update File: replaces the entire file with the given lines (lines prefixed with '+')

Usage:
    cat patchfile | apply_patch
    apply_patch patchfile
"""

import sys
import os
import re

def read_patch_input():
    if len(sys.argv) == 2:
        with open(sys.argv[1], "r", encoding="utf-8") as f:
            return f.read()
    else:
        return sys.stdin.read()

def parse_patch_blocks(patch_text):
    """
    Returns a list of patch blocks (as strings, including markers).
    """
    pattern = re.compile(
        r"\*\*\* Begin Patch\r?\n([\s\S]*?)\r?\n\*\*\* End Patch",
        re.MULTILINE
    )
    return pattern.findall(patch_text)

def apply_add_file(filename, lines):
    if os.path.exists(filename):
        print(f"[error] File already exists: {filename}", file=sys.stderr)
        return False
    os.makedirs(os.path.dirname(filename), exist_ok=True)
    with open(filename, "w", encoding="utf-8") as f:
        for line in lines:
            if line.startswith("+"):
                f.write(line[1:] + "\n")
    print(f"[apply_patch] Added file: {filename}")
    return True

def apply_update_file(filename, lines):
    if not os.path.exists(filename):
        print(f"[error] File does not exist for update: {filename}", file=sys.stderr)
        return False
    with open(filename, "w", encoding="utf-8") as f:
        for line in lines:
            if line.startswith("+"):
                f.write(line[1:] + "\n")
    print(f"[apply_patch] Updated file: {filename}")
    return True

def main():
    patch_text = read_patch_input()
    blocks = parse_patch_blocks(patch_text)
    if not blocks:
        print("[error] No patch blocks found.", file=sys.stderr)
        sys.exit(2)
    success = True
    for block in blocks:
        lines = block.strip().splitlines()
        i = 0
        while i < len(lines):
            line = lines[i]
            if line.startswith("*** Add File:"):
                filename = line[len("*** Add File:"):].strip()
                file_lines = []
                i += 1
                while i < len(lines) and not lines[i].startswith("***"):
                    file_lines.append(lines[i])
                    i += 1
                if not apply_add_file(filename, file_lines):
                    success = False
            elif line.startswith("*** Update File:"):
                filename = line[len("*** Update File:"):].strip()
                file_lines = []
                i += 1
                while i < len(lines) and not lines[i].startswith("***"):
                    file_lines.append(lines[i])
                    i += 1
                if not apply_update_file(filename, file_lines):
                    success = False
            else:
                i += 1
    if not success:
        sys.exit(2)
    print("[apply_patch] Patch applied successfully.")

if __name__ == "__main__":
    main()
